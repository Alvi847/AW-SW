<div class="lista-recetas">
        <div class="buscador">
        <svg class="icono-busqueda" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none"
            stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="11" cy="11" r="8"></circle>
            <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
        </svg>
        <div class="input">
            <input type="text" placeholder="Buscar" id="buscadorRecetas">
        </div>
    </div>
    <div class="recetas-container">
        <p id="mensajeNoEncontrado">
            No se ha encontrado ninguna receta
        </p>    
        <% recetas.forEach((r)=> { %>
            <div class="receta-card">
                <a href="/receta/verReceta/<%= r.id %>">
                    <div class="receta-content">
                            <img class="receta-imagen" src="/imagen/<%= r.imagen %>" alt="<%= r.nombre %>">
                        <div class="receta-info">
                            <h3>
                                <%= r.nombre %>
                            </h3>
                            <p class="resumen">
                                <%= r.descripcion %>
                            </p>
                        </div>
                    </div>
                </a>
            </div>
            <% }) %>
    </div>  
</div>
<!--si el usuario esta logueado y sus favoritos son como minimo 1-->
<!--se penso al prinipio de hacer un carrusel, pero hemos pensado que es ineficiente si el usuario tiene-->
<!--unas 50 recetas con like. Tendria que estar dandole a las flechitas constantemente-->
<!--De este modo, el usuario, las podra visualizar mejor-->
<% if (login && favoritos.length > 0) { %>
    <div class="favoritos-section">
        <h2>TUS FAVORITOS</h2>
        <div class="fav-grid" id="fav-grid">
            <% favoritos.forEach((f, index) => { %>
                <div class="fav-receta-card <%= index >= 3 ? 'hidden-fav' : '' %>">
                    <a href="/receta/verReceta/<%= f.id %>">
                        <div class="fav-receta-content">
                            <img class="fav-receta-imagen" src="/imagen/<%= f.imagen %>" alt="<%= f.nombre %>">
                            <div class="fav-receta-overlay">
                                <h3><%= f.nombre %></h3>    <!--nombre de la receta-->
                            </div>
                        </div>
                    </a>
                </div>
            <% }) %>
        </div>    
    <% if (favoritos.length > 3) { %>
        <button id="toggle-button" class="expand-btn">
            <svg id="icon-chevron" xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                 fill="currentColor" class="bi bi-chevron-compact-down" viewBox="0 0 16 16">
              <path fill-rule="evenodd"
                    d="M1.553 6.776a.5.5 0 0 1 .67-.223L8 9.44l5.776-2.888a.5.5 0 1 1 .448.894l-6 3a.5.5 0 0 1-.448 0l-6-3a.5.5 0 0 1-.223-.67"/>
            </svg>
          </button>
          
    <% } %>
    </div>
<% } %>
<script>
    const contenedor = document.querySelector(".buscador");
const input = document.getElementById("buscadorRecetas");

input.addEventListener("focus", () => {
    contenedor.style.border = "3.5px solid #e67e22"; // nuevo color o estilo
});

input.addEventListener("blur", () => {
    contenedor.style.border = "1px solid #ccc"; // estilo original
});

</script>

<!--script para el buscador de recetas-->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const buscador = document.getElementById("buscadorRecetas");
        const recetas = document.querySelectorAll(".receta-card");
        const mensajeNoEncontrado = document.getElementById("mensajeNoEncontrado");

        buscador.addEventListener("input", function () {
            const filtro = buscador.value.toLowerCase().trim();
            let hayCoincidencias = false;

            recetas.forEach((receta) => {
                const nombreReceta = receta.querySelector("h3").innerText.toLowerCase().trim();

                // Dividir el nombre en palabras y comprobar si alguna empieza con el filtro
                const palabras = nombreReceta.split(" ");
                const coincide = palabras.some(palabra => palabra.startsWith(filtro));

                if (coincide) {
                    receta.style.display = "block";
                    hayCoincidencias = true;
                } else {
                    receta.style.display = "none";
                }
            });

            // Mostrar mensaje si no hay coincidencias
            mensajeNoEncontrado.style.display = hayCoincidencias ? "none" : "block";
        });
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
    const toggleBtn = document.getElementById('toggle-button');
    const hiddenCards = document.querySelectorAll('.hidden-fav');
    const chevronIcon = document.getElementById('icon-chevron');

    let expanded = false;

    if (toggleBtn) {
        toggleBtn.addEventListener('click', () => {
            expanded = !expanded;

            hiddenCards.forEach(card => {
                card.style.display = expanded ? 'block' : 'none';
            });

            // Rotar el icono
            chevronIcon.classList.toggle('rotado', expanded);
        });
    }
});

</script>
